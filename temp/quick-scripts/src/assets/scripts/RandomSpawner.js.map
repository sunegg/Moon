{"version":3,"sources":["assets/scripts/RandomSpawner.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;;;;;;;;;;;;;;;;;;;;AAE5E,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAyB,CAAC;AAG1C;IAA2C,iCAAY;IADvD;QAAA,qEA2DC;QAlDG,YAAM,GAAY,KAAK,CAAC;QAGxB,cAAQ,GAAW,CAAC,CAAC;QAMvB,UAAI,GAAW,CAAC,CAAC;QAGjB,UAAI,GAAW,CAAC,CAAC;QAIjB,aAAO,GAAW,CAAC,CAAC;;QAiClB,iBAAiB;IACrB,CAAC;sBA1DoB,aAAa;IA0B9B,8BAAM,GAAN;QACI,eAAa,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,IAAI,CAAC,EAAE,CACR,OAAO,EACP,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IAC1B,CAAC;IAEF;;;;;;;;QAQI;IAEH,6BAAK,GAAL;QACI,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QACrB,IAAI,KAAK,GAAG,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;QACpC,IAAI,IAAI,GAAE,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAI,EAAE,CAAC,EAAE,CAAC,CAAC,EAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC,OAAO,CAAC,EAAC,CAAC,CAAC,CAAC;QAC3F,yBAAyB;QACvB,OAAO,IAAI,CAAC;IACjB,CAAC;IAED,6CAAqB,GAArB,UAAsB,GAAG,EAAE,GAAG;QAC1B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;IAC3D,CAAC;;IAlDH;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;iDACF;IAGlB;QADC,QAAQ;iDACe;IAGxB;QADC,QAAQ;mDACY;IAGrB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;iDACF;IAGlB;QADC,QAAQ;+CACQ;IAGjB;QADC,QAAQ;+CACQ;IAIjB;QADC,QAAQ;kDACW;IAxBD,aAAa;QADjC,OAAO;OACa,aAAa,CA0DjC;IAAD,oBAAC;CA1DD,AA0DC,CA1D0C,EAAE,CAAC,SAAS,GA0DtD;kBA1DoB,aAAa","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class RandomSpawner extends cc.Component {\n\n    static instance: RandomSpawner;\n\n    @property(cc.Prefab)\n    prefab: cc.Prefab;\n\n    @property\n    repeat: boolean = false;\n\n    @property\n    interval: number = 5;\n    \n    @property(cc.Node)\n    parent: cc.Node;\n\n  @property\n  minY: number = 0;\n\n  @property\n  maxY: number = 0;\n    \n    \n  @property\n  offsetY: number = 0;\n    \n    onLoad() {\n        RandomSpawner.instance = this;\n        this.node.on(\n            \"spawn\",\n            this.spawn, this);\n    }\n\n   /* start() {\n        if (this.repeat) {\n            this.spawn();\n            this.schedule(function () {\n                // 这里的 this 指向 component\n                this.spawn();\n            }, this.interval);\n        }\n    }*/\n    \n    spawn(): cc.Node {\n        cc.log(\"spawnStair\");\n        var scene = cc.director.getScene();\n       var node= cc.instantiate(this.prefab);\n        node.parent = this.parent;\n        node.position =  cc.v3(0,this.randomIntFromInterval(this.minY, this.maxY+this.offsetY),0);\n       //node.setPosition(0, 0);\n         return node;\n    }\n\n    randomIntFromInterval(min, max) { // min and max included \n        return Math.floor(Math.random() * (max - min + 1) + min);\n      }\n\n    // update (dt) {}\n}\n"]}