{"version":3,"sources":["assets/scripts/WebViewObject.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;;;;;;;;;;;;;;;;;;;;AAElF,uCAAkC;AAE5B,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAyB,CAAC;AAG1C;IAA2C,iCAAY;IAAvD;;IAqBA,CAAC;IAnBG,6BAAK,GAAL;QACI,IAAI,CAAC,IAAI,CAAC,cAAc,CAAE,EAAE,CAAC,OAAO,CAAC,CAAC;QACtC,IAAI,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;QAC5C,IAAI,IAAI,GAAG,GAAG,CAAC,UAAU,CAAC,gBAAgB,CAAC,aAAa,EAAE,eAAe,CAAC,CAAC;QAC3E,IAAI,IAAI,GAAG,GAAG,CAAC,UAAU,CAAC,gBAAgB,CAAC,aAAa,EAAE,eAAe,CAAC,CAAC;QAC3E,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,kBAAQ,CAAC,GAAG,EAAC,IAAI,EAAC,IAAI,CAAC,CAAC,CAAC;IAC9E,CAAC;IAED,oCAAY,GAAZ,UAAa,GAAW;QAAE,aAAgB;aAAhB,UAAgB,EAAhB,qBAAgB,EAAhB,IAAgB;YAAhB,4BAAgB;;QACtC,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YAC/C,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,MAAI,KAAK,MAAG,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;SAC7C;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAEJ,mCAAW,GAAX,UAAa,CAAC;QACT,OAAO,QAAQ,CAAE,kBAAkB,CAAE,CAAC,CAAE,CAAE,CAAC;IAC/C,CAAC;IAnBgB,aAAa;QADjC,OAAO;OACa,aAAa,CAqBjC;IAAD,oBAAC;CArBD,AAqBC,CArB0C,EAAE,CAAC,SAAS,GAqBtD;kBArBoB,aAAa","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport GameData from \"./GameData\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class WebViewObject extends cc.Component {\n\n    start() {\n        this.node.setContentSize (cc.winSize);\n        let webView = this.getComponent(cc.WebView);\n        var idfa = jsb.reflection.callStaticMethod(\"DeviceUtils\", \"getIDFAString\");\n        var idfv = jsb.reflection.callStaticMethod(\"DeviceUtils\", \"getIDFVString\");\n        webView.url = this.encode_utf8(this.FormatString(GameData.url,idfa,idfv));\n    }\n\n    FormatString(str: string, ...val: string[]) {\n        for (let index = 0; index < val.length; index++) {\n          str = str.replace(`{${index}}`, val[index]);\n        }\n        return str;\n      }\n\n   encode_utf8( s ){\n        return unescape( encodeURIComponent( s ) );\n    }\n\n}\n"]}